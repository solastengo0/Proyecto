---
title: "Borrador_Gabi"
format: pdf
---


```{r}
library(tidyverse)
library(here)
library(readxl)

receptivo <- read_excel(here::here(
  "data/receptivo.xlsx"
  ))

receptivo_fecha <-
  receptivo |> 
  separate(
    col = FechaIngreso,
    into = c("anio_I", "mes_I", "dia_I"),
    convert = TRUE
  )

# Separo FechaEgreso en anio, mes y día:
receptivo_fecha <- 
  receptivo_fecha |> 
  separate(
    col = FechaEgreso,
    into = c("anio_E", "mes_E", "dia_E"),
    convert = TRUE
  )

# Creo Variable aniomes:
receptivo_fecha <- 
  receptivo_fecha |>
  mutate(
    aniomes_I = anio_I*100 + mes_I,
    aniomes_E = anio_E*100 + mes_E,
    .before = anio_I
    )

receptivo_fecha <- 
receptivo_fecha |> 
  mutate(across(
    .cols = starts_with("Gasto"),
    .fns = ~ round((.x/Gente), 2),
    .names = "{.col}_porPersona"
  )) |> 
  relocate(IdIngresos:Gente, GastoTotal, GastoTotal_porPersona, GastoAlojamiento, GastoAlojamiento_porPersona, GastoAlimentacion, GastoAlimentacion_porPersona, GastoTransporte, GastoTransporte_porPersona, GastoCultural, GastoCultural_porPersona, GastoTours, GastoTours_porPersona, GastoCompras, GastoCompras_porPersona, GastoOtros, GastoOtros_porPersona, Coef:CoefTot)

receptivo_fecha_dia <- 
receptivo_fecha |> 
  mutate(across(
    .cols = ends_with("_porPersona"),
    .fns = ~ round((.x/Estadia), 2),
    .names = "{.col}_Dia"
  )) |> 
  relocate(IdIngresos:Gente, GastoTotal, GastoTotal_porPersona, GastoTotal_porPersona_Dia, GastoAlojamiento, GastoAlojamiento_porPersona, GastoAlojamiento_porPersona_Dia, GastoAlimentacion, GastoAlimentacion_porPersona, GastoAlimentacion_porPersona_Dia, GastoTransporte, GastoTransporte_porPersona, GastoTransporte_porPersona_Dia, GastoCultural, GastoCultural_porPersona, GastoCultural_porPersona_Dia, GastoTours, GastoTours_porPersona, GastoTours_porPersona_Dia, GastoCompras, GastoCompras_porPersona, GastoCompras_porPersona_Dia, GastoOtros, GastoOtros_porPersona, GastoOtros_porPersona_Dia, Coef:CoefTot)

receptivo_fecha_dia <- 
  receptivo_fecha_dia |> 
  mutate(
    Motivo_otr = case_when(
      Motivo == "Estudios" ~ "Otros",
      Motivo == "Salud / wellness" ~ "Otros",
      Motivo == "Compras" ~ "Otros",
      Motivo == "Religioso" ~ "Otros",
      Motivo == "MICE" ~ "Otros",
      .default = Motivo
    ),
    .after = "Motivo"
  )
```

```{r}
#| eval: false
library(here)
library(readxl)
diccionario <- read_excel(here::here(
  "data/Diccionario.xlsx"
  ))

```


### Canitdad de observaciones por hoteles.
```{r}
receptivo |> 
  group_by(Alojamiento) |> 
  summarise(cant. = n()) |> 
  print(n=22) |> 
  arrange(desc(cant.)) |> 
  filter(str_starts(string = Alojamiento, pattern = "Hotel"))
```


### Distribución de la RESIDENCIA de las personas que ingresaron.
```{r}
receptivo |> 
  group_by(Residencia) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.))
```

```{r}
# Top 10 residencias de los que ingresan.
ggplot(
  receptivo |> 
  group_by(Residencia) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.)) |> 
  slice_max(cant., n=10)
) +
  geom_col(aes(fct_inorder(Residencia), cant.)) +
  coord_flip()
```

```{r}
ggplot(receptivo) +
  geom_bar(aes(fct_infreq(Residencia)))+
  coord_flip()
```



### Distribución del MOTIVO de ingreso.

```{r}
receptivo |> 
  group_by(Motivo) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.))
```
```{r}
ggplot(receptivo) +
  geom_bar(aes(fct_infreq(Motivo))) +
  coord_flip()
```

### MOTIVO de ingreso según RESIDENCIA.

```{r}
receptivo |>
  select(Motivo, Residencia) |> 
  group_by(Motivo, Residencia) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.)) |> 
  filter(cant. >= 100 & Motivo != "Ocio y vacaciones") |> 
  ggplot() +
  geom_col(aes(
    x = fct_infreq(Residencia),
    y = cant.,
    fill = Motivo
  )) +
  coord_flip()
```

### MOTIVO según NACIONALIDAD, sólo quienes ingresan desde américa.

```{r}
receptivo |>
  select(Motivo, Pais, IdNacionalidad) |> 
  group_by(Motivo, Pais, IdNacionalidad) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.)) |> 
  filter(!(IdNacionalidad %in% c(51:57, 59, 61:63, 69, 79))) |>
  ggplot() +
  geom_col(aes(
    x = fct_infreq(Pais),
    y = cant.,
    fill = Motivo
  )) +
  coord_flip()
```

### MOTIVO según NACIONALIDAD, sólo quienes ingresan desde afuera de américa.

```{r}
receptivo |>
  select(Motivo, Pais, IdNacionalidad) |> 
  group_by(Motivo, Pais, IdNacionalidad) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.)) |> 
  filter(IdNacionalidad %in% c(51:57, 59, 61:63, 69, 79)) |>
  ggplot() +
  geom_col(aes(
    x = fct_infreq(Pais),
    y = cant.,
    fill = Motivo
  )) +
  coord_flip()
```


#### Nota:
IdNacionalidad, de 50 para abajo es america (sur, central y norte) y 50 para arriba es Europa, Asia, Oceania (resto del mundo).

```{r}
receptivo |> 
  select(IdNacionalidad, Pais) |> 
  group_by(IdNacionalidad, Pais) |> 
  summarise(cant. = n()) |> 
  arrange(desc(cant.))
```

```{r}
receptivo |> 
  select(Gente) |>
  sum()
```


```{r}
receptivo |>
  select(Gente) |>
  count()
```
#### Obs.: Más gente que observaciones
NACIONALIDAD y RESIDENCIA la tomamos como la del grupo, o del que contesta la encuesta?


## Cambio FECHA INGRESO/EGRESO por anio, aniomes.

```{r}
# Separo FechaIngreso en anio, mes y día:
receptivo_fecha <-
  receptivo |> 
  separate(
    col = FechaIngreso,
    into = c("anio_I", "mes_I", "dia_I"),
    convert = TRUE
  )

# Separo FechaEgreso en anio, mes y día:
receptivo_fecha <- 
  receptivo_fecha |> 
  separate(
    col = FechaEgreso,
    into = c("anio_E", "mes_E", "dia_E"),
    convert = TRUE
  )

# Creo Variable aniomes:
receptivo_fecha <- 
  receptivo_fecha |>
  mutate(
    aniomes_I = anio_I*100 + mes_I,
    aniomes_E = anio_E*100 + mes_E,
    .before = anio_I
    )

receptivo_fecha |> 
  select(aniomes_I:IdFecEgr)
```


#### Nota: Detalle
Creo que hay un error en la fecha de ingreso del 2011-12-27, porque su fecha de egreso es 8 años despues, 2019-01-10. Creo que en vez de 2011 es 2018, porque el Destino es costas oceanicas y la estadía marca 14 días.


## Creo la variable Gasto por persona


```{r}
receptivo_fecha <- 
receptivo_fecha |> 
  mutate(across(
    .cols = starts_with("Gasto"),
    .fns = ~ round((.x/Gente), 2),
    .names = "{.col}_porPersona"
  )) |> 
  relocate(IdIngresos:Gente, GastoTotal, GastoTotal_porPersona, GastoAlojamiento, GastoAlojamiento_porPersona, GastoAlimentacion, GastoAlimentacion_porPersona, GastoTransporte, GastoTransporte_porPersona, GastoCultural, GastoCultural_porPersona, GastoTours, GastoTours_porPersona, GastoCompras, GastoCompras_porPersona, GastoOtros, GastoOtros_porPersona, Coef:CoefTot)
```


```{r}
receptivo_fecha |> head()
```



## Gasto por persona por Día!


```{r}
receptivo_fecha_dia <- 
receptivo_fecha |> 
  mutate(across(
    .cols = ends_with("_porPersona"),
    .fns = ~ round((.x/Estadia), 2),
    .names = "{.col}_Dia"
  )) |> 
  relocate(IdIngresos:Gente, GastoTotal, GastoTotal_porPersona, GastoTotal_porPersona_Dia, GastoAlojamiento, GastoAlojamiento_porPersona, GastoAlojamiento_porPersona_Dia, GastoAlimentacion, GastoAlimentacion_porPersona, GastoAlimentacion_porPersona_Dia, GastoTransporte, GastoTransporte_porPersona, GastoTransporte_porPersona_Dia, GastoCultural, GastoCultural_porPersona, GastoCultural_porPersona_Dia, GastoTours, GastoTours_porPersona, GastoTours_porPersona_Dia, GastoCompras, GastoCompras_porPersona, GastoCompras_porPersona_Dia, GastoOtros, GastoOtros_porPersona, GastoOtros_porPersona_Dia, Coef:CoefTot)
```

```{r}
receptivo_fecha_dia |> select(!(IdIngresos:Destino))
```



kable
install.packages("kableExtra")



```{r}
receptivo_fecha |> group_by(Gente) |> summarise(cant. = n())
```


```{r}
receptivo_fecha |> filter(Gente > 10) |> arrange(desc(GastoTotal))
```



gt
install.packages("gt")
library(gt)


```{r}
install.packages("GGally")
library(GGally)
```

```{r}
receptivo_fecha_dia |> 
  select(starts_with("Gasto") & ends_with("dia")) |> 
  ggcorr()
```

```{r}
receptivo_fecha_dia |> 
  filter(between(GastoOtros_porPersona_Dia, 1, 4999)) |> 
  ggplot(aes(x = GastoOtros_porPersona_Dia, y = GastoTotal_porPersona_Dia)) +
  geom_hex() +
  geom_point(aes(x = GastoAlimentacion_porPersona_Dia, y = GastoTotal_porPersona_Dia), color = "red")
```


```{r}
receptivo_fecha_dia |> 
  select(
    IdNacionalidad, Pais, Motivo, Alojamiento, Estadia, GastoTotal_porPersona_Dia
    ) |> 
  filter(
    IdNacionalidad < 40 & Estadia < 15 & GastoTotal_porPersona_Dia < 350
    ) |> 
  ggplot(aes(
    x = GastoTotal_porPersona_Dia, 
    y = Pais, 
    fill = Pais
    )) +
  geom_density_ridges() +
  theme_ridges() + 
  theme(legend.position = "none")
```





```{r}
library(ggmosaic)

receptivo_fecha_dia |> 
  filter(Estudio %in% c("Primaria completa", "Secundaria completa", "Secundaria incompleta", "Terciaria completa", "Terciaria incompleta") & Motivo %in% c("Ocio y vacaciones", "Visita a familiares y amigos" , "Trabajo / Profesional", "Transito", "Segunda Residencia")) |> 
ggplot() +
 geom_mosaic(aes(x = product(Estudio, Motivo), fill= Motivo))
```




### Cómo se relaciona el gasto por persona por día, con otras variables de interes?


#### Estadía menor o igual a 15 días
```{r}
receptivo_fecha_dia |> 
  select(GastoTotal_porPersona_Dia, Estadia) |> 
  filter(Estadia < 100 & GastoTotal_porPersona_Dia < 5000 & Estadia <= 15) |> 
  ggplot(aes(x = Estadia, y = GastoTotal_porPersona_Dia)) +
  geom_boxplot(aes(group = cut_width(Estadia, 1)))
```


```{r}
receptivo_fecha_dia |> 
  select(IdNacionalidad, Pais, Motivo, Alojamiento, GastoTotal_porPersona_Dia) |> 
  group_by(IdNacionalidad, Pais, Motivo, Alojamiento) |>
  summarise(sum. = sum(GastoTotal_porPersona_Dia)) |> 
  arrange(desc(sum.)) |> 
  filter(IdNacionalidad < 50) |> 
  ggplot() + 
  geom_boxplot(aes(
    x = fct_inorder(Pais),
    y = sum.
  ))
```

```{r}
receptivo_fecha_dia |> 
  select(
    IdNacionalidad, Pais, Motivo, Alojamiento, Estadia, GastoTotal_porPersona_Dia
    ) |> 
  filter(
    IdNacionalidad < 40 & Estadia < 15 & GastoTotal_porPersona_Dia < 350
    ) |>
ggplot() + 
  geom_violin((aes(
    x = fct_infreq(Pais),
    y = GastoTotal_porPersona_Dia
    )
    )
  )
```
    
```{r}   
install.packages("randomForest")
library(randomForest)
```


```{r}
ggplot(receptivo_fecha_dia) + 
  geom_point(aes(
    x = GastoAlojamiento_porPersona_Dia,
    y = GastoTransporte_porPersona_Dia,
    color = Estadia
  ))
```

## Agregar otra variable de Motivo en la que el valor 'Otro' incluye a:
Estudios
Salud / wellness			
Compras			
Religioso
MICE

```{r}
receptivo_fecha_dia |> 
  group_by(Motivo) |> 
  summarise(n. = n()) |> 
  arrange(desc(n.))
```

```{r}
#Cantidad de 'Otros' que quiero:
receptivo_fecha_dia |> 
  group_by(Motivo) |> 
  summarise(n. = n()) |> 
  arrange(desc(n.)) |> 
  filter(n. < 1000) |> 
  summarise(sum(n.))
```



```{r}
receptivo_fecha_dia <- 
  receptivo_fecha_dia |> 
  mutate(
    Motivo_otr = case_when(
      Motivo == "Estudios" ~ "Otros",
      Motivo == "Salud / wellness" ~ "Otros",
      Motivo == "Compras" ~ "Otros",
      Motivo == "Religioso" ~ "Otros",
      Motivo == "MICE" ~ "Otros",
      .default = Motivo
    ),
    .after = "Motivo"
  )
```

```{r}
receptivo_fecha_dia |> 
  group_by(Motivo, Motivo_otr) |> 
  summarise(n. = n()) |> 
  arrange(desc(n.))
```


```{r}
ggplot(receptivo_fecha_dia) +
  geom_bar(aes(x = fct_rev(fct_infreq(Motivo_otr)), fill = Motivo_otr)) +
  coord_flip() +
  labs(x = "Motivo",
       y = "Cantidad") +
  theme_minimal() +
    scale_fill_okabeito(order = c(1:3, 5:7))
```


```{r}
library(see)

receptivo_fecha_dia |>
  filter(!(IdNacionalidad %in% c(51:57, 59, 61:63, 69, 79))) |>
  group_by(Motivo_otr, Pais) |>
  summarise(cantidad = n()) |>
  arrange(desc(cantidad)) |> 
  mutate(proporcion = cantidad / sum(cantidad),
         acumulado = cumsum(proporcion)) |> 

ggplot(aes(x = fct_infreq(Pais), y = proporcion, fill = Motivo_otr)) +
    geom_col(position = "fill", color = "grey8") +
    coord_flip() +
    labs(x = "Nacionalidad", 
         y = "Proporción acumulada") +
    scale_y_continuous(labels = scales::percent) +
    theme_minimal() +
    scale_fill_okabeito(order = c(1:3, 5:7))
```

### Interactivo:
```{r}
library(plotly)

gr1 <- receptivo_fecha_dia |>
  filter(!(IdNacionalidad %in% c(51:57, 59, 61:63, 69, 79))) |>
  group_by(Motivo_otr, Pais) |>
  summarise(cantidad = n()) |>
  arrange(desc(cantidad)) |> 
  mutate(proporcion = cantidad / sum(cantidad),
         acumulado = cumsum(proporcion)) |> 
ggplot(aes(x = fct_infreq(Pais), y = proporcion, fill = Motivo_otr)) +
    geom_col(position = "fill", color = "grey8") +
    coord_flip() +
    labs(x = "Nacionalidad", 
         y = "Proporción acumulada") +
    scale_y_continuous(labels = scales::percent) +
    theme_minimal() +
    scale_fill_okabeito(order = c(1:3, 5:7))

ggplotly(gr1)
```


### Interesante: Distribución del gasto segun el motivo XX

```{r}
library(viridis)
library(ggridges)
```


```{r}
receptivo_fecha_dia |> 
  filter(GastoTotal_porPersona_Dia < 350) |> 
  ggplot(aes(
    x = GastoTotal_porPersona_Dia, 
    y = Motivo_otr, 
    fill = Motivo_otr
    )) +
  geom_density_ridges() +
  theme_minimal() + 
  theme(legend.position = "none") +
  scale_fill_okabeito()
```

### Interesante: Distribución del gasto segun el Estudio (los que tenemos más datos)

```{r}
install.packages("ggridges")
```

```{r}
library(ggridges)

receptivo_fecha_dia |> 
  filter(GastoTotal_porPersona_Dia < 300 & Estudio %in% c("Primaria completa", "Secundaria completa", "Secundaria incompleta", "Terciaria completa", "Terciaria incompleta")) |> 
  ggplot(aes(
    x = GastoTotal_porPersona_Dia, 
    y = Estudio, 
    fill = Estudio
    )) +
  geom_density_ridges() +
  theme_minimal() + 
  theme(legend.position = "none") +
  scale_fill_okabeito()
```





```{r}
receptivo_fecha_dia |>
  filter(IdNacionalidad %in% c(51:57, 59, 61:63, 69, 79)) |>
  group_by(Motivo_otr, Pais) |>
  summarise(cantidad = n()) |>
  arrange(desc(cantidad)) |>
  mutate(proporcion = cantidad / sum(cantidad),
         acumulado = cumsum(proporcion)) |> 

ggplot(aes(x = fct_infreq(Pais), y = proporcion, fill = Motivo_otr)) +
  geom_col(position = "fill") +
  coord_flip() +
  labs(x = "Nacionalidad",
       y = "Proporción acumulada") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal()
```

Mucho 'Otros' desde Japón:

```{r}
receptivo_fecha_dia |> 
  filter(Pais == "Japon") |> 
  group_by(Motivo) |> 
  summarise(count. = n())
```
Es porque hay muy pocas observaciones desde japón, entonces al colapsar los motivos en otros se acumulan y parecen más.



Mucho 'Segunda Residencia' desde Suecia: ???

```{r}
receptivo_fecha_dia |> 
  filter(Pais == "Suecia") |> 
  group_by(Motivo) |> 
  summarise(count. = n())
```



## MODELO


```{r}
m2 <- lm(GastoTotal_porPersona_Dia ~ Estadia + GastoAlojamiento_porPersona_Dia + GastoTransporte_porPersona_Dia, data= receptivo_fecha_dia)
summary(m2)
```


```{r}
library(kableExtra)

dd <- data.frame(R2 = summary(m2)$r.squared, sigma=summary(m2)$sigma, AIC=AIC(m2))

kable(dd)
```


```{r}
ggplot( ) + geom_point(aes(x=fitted(m2), y=rstudent(m2) )) +
 labs(title='Residuos vs Predicciones',
 x=expression( hat(y[i])) , y = expression(e[i]/SE(e[i])) ) +
 theme(aspect.ratio = 1)
```


```{r}
receptivo_fecha_dia %>% head()
```


```{r}
subdatos <- receptivo_fecha_dia %>% 
  select(Pais, Motivo, Estudio, Localidad, Departamento, Alojamiento, Estadia, Gente, GastoTotal:GastoOtros_porPersona_Dia
)
subdatos %>% head()
```


```{r}
library(here)
library(tidyverse)
library(randomForest)
library(modelr)
#separo training y test
intrain <- sample(
  x = 1:nrow(subdatos), 
  size = nrow(subdatos)*.7)

training <- subdatos[intrain,]

testing <- subdatos[-intrain,]
# ajustamos modelo lineal simple
rf <- randomForest(GastoTotal_porPersona_Dia~ .,data= training, na.action=na.omit)
#raiz cuadrada del error cuadr´atico medio
rmse(rf, testing)
## [1] 3.370582
```

```{r}
library(ranger)
```

```{r}
library(here)
library(tidyverse)
library(randomForest)
library(modelr)
#separo training y test
intrain <- sample(
  x = 1:nrow(subdatos), 
  size = nrow(subdatos)*.5)

training <- subdatos[intrain,]

testing <- subdatos[-intrain,]
# ajustamos modelo lineal simple
rf <- ranger(GastoTotal_porPersona_Dia~ ., data= training, na.action=na.omit)
#raiz cuadrada del error cuadr´atico medio
rmse(rf, testing)
```



```{r}
training %>% 
  select(Motivo) %>% levels()
```


```{r}
receptivo_fecha_dia |>
  group_by(Pais) |> 
  filter(IdNacionalidad < 50) |> 
  summarise(n = n()) |> 
  arrange(desc(n)) |>
  filter(Pais != "Otro de America") |> 
  mutate(Pais = case_when(
      Pais == "Brasil" ~ "Brazil",
      .default = Pais
  )) |> 
  select(Pais)
```


## Mapa


```{r}
latam <- receptivo_fecha_dia |>
  group_by(Pais) |> 
  filter(IdNacionalidad < 50) |> 
  summarise(sum = sum(GastoTotal_porPersona_Dia)) |> 
  arrange(desc(n)) |>
  filter(Pais != "Otro de America") |> 
  mutate(Pais = case_when(
      Pais == "Brasil" ~ "Brazil",
      .default = Pais
  )) |> 
  select(Pais) |> 
  as.vector()

latam.maps <- map_data("world", region = c(latam$Pais, "USA", "Panama"))

latam.maps <- latam.maps |> 
 mutate(long2 = mean(long), lat2 = mean(lat))


ggplot(latam.maps, aes(x = long, y = lat)) +
geom_polygon(aes( group = group, fill = region))
```

### Sólo América

```{r}
reg <- 
receptivo_fecha_dia |>
  group_by(Pais) |> 
  filter(IdNacionalidad < 50) |> 
  summarise(Gasto_Medio_Pers_Dia = mean(GastoTotal_porPersona_Dia),
            sd_GMPD = sd(GastoTotal_porPersona_Dia)) |> 
  arrange(desc(Gasto_Medio_Pers_Dia)) |> 
  mutate(Pais = case_when(
      Pais == "Brasil" ~ "Brazil",
      Pais == "Otro de America" ~ "Resto de America",
      .default = Pais
  )) |> 
  filter(Pais != "Resto de America") |>  
  rename(region = Pais)

reg
```


```{r}
mapa <- latam.maps |> left_join(reg, by = join_by(region))

ggplot(mapa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Gasto_Medio_Pers_Dia)) +
  scale_fill_viridis_c(option = "D")
```

#### Interactivo
```{r}
mp <- ggplot(mapa, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Gasto_Medio_Pers_Dia)) +
  scale_fill_viridis_c(option = "D")

ggplotly(mp)
```

### Todo mundo

```{r}
reg2 <- 
receptivo_fecha_dia |>
  group_by(Pais) |> 
  summarise(Gasto_Medio_Pers_Dia = mean(GastoTotal_porPersona_Dia),
            sd_GMPD = sd(GastoTotal_porPersona_Dia)) |> 
  arrange(desc(Gasto_Medio_Pers_Dia)) |> 
  mutate(Pais = case_when(
      Pais == "Brasil" ~ "Brazil",
      Pais == "Otro de America" ~ "Resto de America",
      Pais == "EE.UU." ~ "USA",
      .default = Pais
  )) |> 
  filter(Pais != "Resto de America" & Pais != "Otro de Europa" & Pais != "Africa u Oceania") |>  
  rename(region = Pais)

mundo.maps <- map_data("world", region = reg2$region)

mapa2 <- mundo.maps |> left_join(reg2, by = join_by(region))
```

```{r}
ggplot(mapa2, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Gasto_Medio_Pers_Dia)) +
  scale_fill_viridis_c(option = "D")
```





